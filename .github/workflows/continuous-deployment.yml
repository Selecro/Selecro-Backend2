name: Continuous Deployment

on:
  push:
    branches:
      - dev
      - main
  workflow_dispatch:

jobs:
  run_pull:
    name: Run Pull and Deploy
    runs-on: ubuntu-latest

    steps:
      - name: 'Checking out code'
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set deployment variables
        run: |
          if [ "${{ github.ref }}" = "refs/heads/dev" ]; then
            echo "DEPLOY_DIR=dev" >> $GITHUB_ENV
            echo "PORT=3002" >> $GITHUB_ENV
            echo "SECOND_PORT=4002" >> $GITHUB_ENV
          elif [ "${{ github.ref }}" = "refs/heads/main" ]; then
            echo "DEPLOY_DIR=main" >> $GITHUB_ENV
            echo "PORT=3001" >> $GITHUB_ENV
            echo "SECOND_PORT=4001" >> $GITHUB_ENV
          else
            echo "Invalid branch for deployment" && exit 1
          fi

      - name: Install SSH keys
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -t rsa ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
          chmod 600 ~/.ssh/known_hosts

      - name: connect and pull
        run: |
          ssh -i ~/.ssh/id_rsa -o UserKnownHostsFile=~/.ssh/known_hosts ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} \
          -p ${{ secrets.SSH_PORT }} "cd ${{ secrets.WORK_DIR }}-${{ env.DEPLOY_DIR }} && \
          git fetch --all && git checkout ${{ env.DEPLOY_DIR }} --force && \
          git pull --force && docker build -t backend-${{ env.DEPLOY_DIR }} . && \
          docker stop backend-${{ env.DEPLOY_DIR }} || true && \
          docker rm backend-${{ env.DEPLOY_DIR }} || true && \
          docker run --name backend-${{ env.DEPLOY_DIR }} -dp ${{ env.PORT }}:${{ env.PORT }} \
          -p ${{ env.SECOND_PORT }}:${{ env.SECOND_PORT }} backend-${{ env.DEPLOY_DIR }} && \
          docker update --restart unless-stopped backend-${{ env.DEPLOY_DIR }} && exit"

      - name: cleanup
        run: rm -rf ~/.ssh
