name: Continuous Deployment

on:
  push:
    branches:
      - dev
      - main
  workflow_dispatch:

jobs:
  run_pull:
    name: Run Pull and Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checking out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set deployment variables
        run: |
          if [ "${{ github.ref }}" = "refs/heads/dev" ]; then
            echo "IMAGE=backend-dev" >> $GITHUB_ENV
            echo "DEFAULT_PORT=${{ secrets.DEFAULT_PORT_DEV }}" >> $GITHUB_ENV
            echo "SQL_DATABASE=${{ secrets.SQL_DATABASE_DEV }}" >> $GITHUB_ENV
            echo "VAULT_PORT=${{ secrets.VAULT_PORT_DEV }}" >> $GITHUB_ENV
          elif [ "${{ github.ref }}" = "refs/heads/main" ]; then
            echo "IMAGE=backend-main" >> $GITHUB_ENV
            echo "DEFAULT_PORT=${{ secrets.DEFAULT_PORT_MAIN }}" >> $GITHUB_ENV
            echo "SQL_DATABASE=${{ secrets.SQL_DATABASE_MAIN }}" >> $GITHUB_ENV
            echo "VAULT_PORT=${{ secrets.VAULT_PORT_MAIN }}" >> $GITHUB_ENV
          else
            echo "Invalid branch for deployment" && exit 1
          fi

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Get the short SHA hash of the commit
        run: |
          echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Build and push Docker image
        run: |
          docker build -t selecro/${{ env.IMAGE }}:${{ github.ref_name }}-${{ env.SHORT_SHA }} .
          docker push selecro/${{ env.IMAGE }}:${{ github.ref_name }}-${{ env.SHORT_SHA }}

      - name: Install OpenVPN
        run: sudo apt-get update && sudo apt-get install openvpn -y

      - name: Establish VPN connection
        run: |
            sudo apt update
            sudo apt install -y openvpn openvpn-systemd-resolved
            echo "${{ secrets.OPENVPN_CONFIG }}" > vpn-config.ovpn
            echo "${{ secrets.OPENVPN_PASSWORD }}" > vpn-credentials.txt
            sudo openvpn --config vpn-config.ovpn --auth-user-pass vpn-credentials.txt --daemon
            sleep 15

      - name: Verify VPN Connection
        run: |
          if ! ip a | grep "tun0"; then
            echo "VPN connection failed!"
            cat openvpn.log
            exit 1
          fi

      - name: Check network connectivity (netcat)
        run: |
          nc -zv ${{ secrets.SERVER_IP }} ${{ secrets.SSH_PORT }} || (echo "Connection failed" && exit 1)

      - name: SSH into Your Server and Deploy
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            docker login || true
            docker pull selecro/${{ env.IMAGE }}:${{ github.ref_name }}-${{ env.SHORT_SHA }}
            docker ps -a | grep ${{ env.IMAGE }} && docker stop ${{ env.IMAGE }} || true
            docker ps -a | grep ${{ env.IMAGE }} && docker rm ${{ env.IMAGE }} || true
            docker run -d --restart unless-stopped \
            -p ${{ env.DEFAULT_PORT }}:${{ env.DEFAULT_PORT }} \
            --name ${{ env.IMAGE }} \
            selecro/${{ env.IMAGE }}:${{ github.ref_name }}-${{ env.SHORT_SHA }}

      - name: Close OpenVPN Connection
        run: sudo pkill openvpn || true

      - name: Clean up SSH Configuration
        run: rm -rf ~/.ssh
